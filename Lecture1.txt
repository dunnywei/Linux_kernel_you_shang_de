https://www.youtube.com/watch?v=3xho7CQRrNs&index=2&list=PLCJcQMZOafIAfS9sz0L9VSqKN0Cmr0E-1

->good link 1->https://blog.csdn.net/dc_726/article/details/49006389
->good link 2->http://blog.163.com/for_log/blog/static/216283028201311963645458/
//AT&T
mov %eax, %ebx //move reigster
               //from eax to ebx
mov $4,ebx//move constant 4 to register ebx
mov value,%ebx// (5:41) put the content of value into register ebx (5:47)
mov %value,%ebx // (5:57) put the address point by value into ebx register (5:57)

->(6:30)
movb//move byte
movw//move word
movl//move long
eg, movw %ax,%bx (7:24)

->AT&T(7:59)
ljmp $section,%offset //We jump(跳转) to the Section:Offset (偏移(offset)的地址处)(9:14) 
lcall $section,%offset

返回指令(9:47)
lret $stack_adust
寻址方式
Section:disp(base,index,sclae). To calculate the actual address
Section:]base+index*scale+disp]

->movl -4(%ebp),%eax
->movl array(%eax,4),%ax->move [eax*4_array] to eax

->movl array(%ebx,%eax,4),%ax->move [ebx+eax*4_array] to eax

->movl $4,%fs:(%eax)->move constant 4 to fs:eax



